#!/usr/bin/python2

# Return named status as json

import traceback, sys, os, cgi, psycopg2, psycopg2.extras, json

try:

    # recursively stringify arbitrary data structure, unknown types become str
    # this is mostly to handle embedded datetime objects
    def stringify(d): 
        if isinstance(d, dict): return dict(map(lambda k:[k,stringify(d[k])], d.keys()))
        if isinstance(d, tuple): return tuple(stringify(list(d)))
        if isinstance(d, list): return map(lambda r:stringify(r), d)
        if isinstance(d, (int,str)): return d
        return str(d) 

    data=""

    conn=psycopg2.connect('dbname=factory')
    cur=conn.cursor(cursor_factory=psycopg2.extras.RealDictCursor)
    form=cgi.FieldStorage()

    what=form.getvalue('what')
    if what == 'now':
        # return current server time
        cur.execute("select uct() as now")
        data=cur.fetchone()

    elif what == 'stations':
        # return latest device for each station
        cur.execute("select devices.* from devices join (select station, max(updated) as updated from devices group by station) as latest on devices.station=latest.station and devices.updated=latest.updated")
        data=cur.fetchall()

    elif what == 'station':
        station=for.getvalues('station')
        cur.
    
    else:
        raise Exception("Invalid status request '%s'" % what)    

    if "debug" in form: 
        print data

    print "Content-type: application/json\n\n" + json.dumps(stringify(data))

except Exception:
    print "Content-type: text/plain; charset=utf-8\n\nAn error has occurred"
    print
    traceback.print_exc(file = sys.stdout)
    print
    for k in sorted(form.keys()): print k,"=",form.getvalue(k)
