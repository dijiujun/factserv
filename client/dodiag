#!/usr/bin/python
# DO NOT REMOVE THIS LINE - coding: utf-8

# This is the test client

import traceback, os, sys, httplib, time

buildid="test"

# Send a request to the pionic controller, return response 
# The IP of the pionic controller is hard coded
# If data is provided, it is will sent as raw POST content with "Content-Type: application/x-www-form-urlencoded"
#pionicip="192.168.111.1"
pionicip="172.16.240.111"

def pionic(service, headers={}, data=None, debug=0):
    c=httplib.HTTPConnection(pionicip);
    c.set_debuglevel(debug)
    if data is None:
        c.request("GET","/"+request,None,headers)
    else:
        c.request("POST","/"+request,data,headers)
    r=c.getresponse()
    if r.status != 200:
        raise Exception("Pionic request failed: %s" % (r.reason,))
    return r.read().strip()    

# request factory service from factoryip
factoryip=None
def factory(service, headers={}, data=None, debug=0):
    headers["service"]=service;
    c=httplib.HTTPConnection(factoryip);
    c.set_debuglevel(debug)
    if data is None:
        c.request("GET","/cgi-bin/factory", None, headers)
    else:
        headers["Content-Type"]="application/x-www-form-urlencoded"
        c.request("POST","/cgi-bin/factory",data,headers)
    r=c.getresponse()
    if r.status != 200:
        raise Exception("Server request failed: %s" % (r.reason,))
    return r.read().strip()    

deviceid=None

def badge(text, chinese=None, fg="white", bg="blue", status=None):
    if deviceid is not None: text=deviceid+"\n"+text
    if chinese is not None: text=text+"\n"+chinese
    pionic("display",{"text":"y", "badge":"y", "fg":fg, "bg":bg}, text)
    if status is not None:
        pionic("display",{"text":"y", "status":"y", "fg":fg}, status)

def testing(status=None):
    badge("Test in progress", chinese="正在测试中", status=status)

try:
    testing(status="Woot")

    if factoryip is None:
        print "Factory IP unknown, requesting from pionic"
        factoryip=pionic("factory")
        print "Factory IP is",factoryip

    if deviceid is None:
        print "Device ID is unknown, allowed to get board ID?"
        factory("newdevice",{"buildid": buildid})
        badge("Scan barcode", chinese="扫描条形码", fg="black", bg="yellow")
        boardid=pionic("getbar")
        testing()
        print "Requesting device ID for board ID",boardid
        deviceid=factory("newdevice",{"buildid":buildid, "boardid":boardid})
        print "Using device ID",deviceid
        testing()

    phase=factory("startdiag",{"deviceid":deviceid, "buildid":buildid})

    print "Performing phase %s tests"%phase
    for l in open("phase%s" % phase):
        l=l.split('#',2)[0].strip()
        if l == "": continue
        t=l.split(':',3)
        if len(t) != 3: raise Exception("Bad line in phase%d: '%s'"%(phase,l))
        name=" ".join(t[0].split())
        timeout=int(t[1] if t[1] else "0")
        if not timeout: timeout=60
        command=" ".join(t[2].split())
        badge(name[:18])
        testid=factory("starttest&deviceid=%s&comment=%s&command=%s" % (deviceid, name, command), debug=1)
        factory("endtest&deviceid=%s&testid=%s&status=%s" % (deviceid, testid, 0), "Nothing actually happened!")

    factory("enddiag&deviceid=%s",(deviceid,))

    badge("TEST PASSED", chinese="通过测试", bg="green");

except Exception as e:
    badge("TEST FAILED", chinese="测试失败", bg="red", status=str(e))
    traceback.print_exc(file = sys.stdout)

