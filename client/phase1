# Phase1 test list example
#
# Comments and whitespace are ignored.
#
# A single test is defined with the format:
#
#       name : timeout : command
#
# Where:
#       'name' is any arbitrary string used to identify the test, may not contain ":"
#       'seconds' is command timeout, must be > 0, but if blank the default is 60 seconds
#       'command' is a command to be executed by /bin/sh
#
# Loop blocks are defined as:
#
#    	count {
# 		name : timeout : commannd
#       	...
#    	}
#
# The tests in the block will be repeated 'count' time.
#
# Normally, testing stops at the first failure. This can be prevented with:
#
#	set IgnoreFail
#
# If a test fails it will be indicated as a failure but testing will continue.
# However the testing cannot proceed to the next phase.
#
# The first phase 1 test is responsible for storing the device ID to
# non-volatile storage, where dodiag.sh can find it. For this demo we just
# write it to /tmp/deviceid.
Store device ID         :: echo $DEVICEID > /tmp/deviceid

# Provision the PCB barcode if needed, requires operator intervention, give
# them 10 minutes to respond! Note the regex is passed to 'grep -E' aka egrep
Provision barcode       : 600  : getbar.sh '.{8}'

# The rest of the tests don't do anything interesting other than fill the test
# log with stuff.
Show the environment    :: sleep 1; set
Get process list        :: sleep 1; ps auxf

# Repeat three times!
3 {
    Get CWD             :: sleep 1; ls -al
    Nothing special     :: sleep 1; echo Nothing to see here, carry on.
}
