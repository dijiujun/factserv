This document describes how to configure a Byton factory server.

To proceed you must be familiar with linux command line operation and common
utilities as well as text editing, and should also have access to a workstation
with ssh and scp. Presumably you're reading this file on that workstation.

The server runs Debian Linux. Start by downloading an ISO install image, e.g.
https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-9.9.0-amd64-netinst.iso.

Assuming the server can boot from USB, dd the image onto a USB stick.
(Otherwise you'll have to create a CD/DVD.)

Attach keyboard, display and ethernet to server. Mouse is not required. The
network must supply DHCP and internet access. 

The server mmust have two ethernet ports, whichever one you plug into will
become the factory-facing interface. The other one will but the DUT interface,
connected to test stations.

* Mark the ports so you know which is which when it comes time to install the
* server in the factory.

If the server supports hardware RAID 1 you may need to enable it in system
BIOS, not in scope of this document. But bear in mind that it may not be
possible for linux to monitor the health of a hardware raid array and the
system won't be physically accessible in normal operation.

The server does not require graphics, if possible the memory allocated for GPU
should be adjusted to minimum size in the BIOS.

Install Debian:

    Boot the server from the prepared USB stick (or CD/DVD). This may require
    entering BIOS and selecting the boot device. 

    When the Debian install menu appears, press down arrow and select
    "Install".  Do not select "Graphical Install". 

    Select the default for language, country, keymap, and network.

    Set hostname to "factory" 

    Set domain name to "localdomain"

    Set root password to "u0+Y8". (Password strength is not super important
    since the only access to the system will be via ssh keys). 

    Leave the full name for new user blank.

    Set the username to "factory", with password "factory".

    Set the time zone to "Pacific"

    If the hard disk has an existing non-UEFI bootloader you will be asked if
    you want to continue to use it. You do not.

    Select partitioning method "Guided - use entire disk"

    Select the hard drive to be partitioned (probably "sda", but this may be
    different is hardware raid is enabled).

    Select "All files in one paritition".

    Select "Write changes to disk".

    You will be informed that the hard drive is about to be "destroyed" with
    three new partitions. Select "Yes".

    Select your country, and any mirror ending with "debian.org" (typically
    "ftp.xx.debian.org"). 

    Enter your proxy information if necessary, but note this may need to be
    reverted once the server is installed in the factory.

    When asked about "popularity-contest", select "No".

    When prompted for "Software selection" make sure only "SSH server" and
    "standard system utilities" are starred then press tab and enter to
    continue. Do NOT select a desktop environment.

Software install will proceed automatically. When done you will be prompted
to remove the install media and reboot.

The system will boot to text login prompt. Log in as "factory" (password "factory").  
    
Check network interfaces:    
    
    > ip a

This should list two interfaces (besides lo). The inteface names are
hardware-specific, for example "eno1" and "eno2". One of the interfaces will
Have an IPV4 address which was assigned by DHCP, this is the factory interface.
The other will not, this is the DUT interface. 

Make a note of the interface names and the current IP address.

Collect the server directory from the factory-infra repo into a tarball and
transfer it to the server as follows:

    you@yourpc$ tar -czvf server.tar.gz -C /path/to/factory-infra server
    you@yourpc$ scp server.tar.gz factory@ip.ad.re.ss:

At this point you may also want to "ssh factory@ip.ad.re.ss" from your
workstation if that's more convenient than using the server's terminal.

On the server, verify that the server tarball is in the right place:

    > ls ~/server.tar.gz

Become root (password is u0+Y8):

    > su - 

Unpack the server tarball:

    > mv ~factory/server.tar.gz .
    > tar -xzvf server.tar.gz

Run the install script, replacing FACTORY and DUT with the names of the network
interfaces you noted earlier:

    > server/install.sh FACTORY DUT

The script will generate some output, ending with  "Install complete".   

Reboot the system.
    
    > reboot

After reboot, ssh will require the factory rsa key. 

    you@yourpc$ ssh -i /path/to/insecure_factory_rsa_id factory@ip.ad.re.ss

The ssh key passphase is "insecure".

NOTE: This process installs insecure (publicly-acessible) keys by default, to
allow preliminary configuration and testing. The keys must be replaced with
secure keys prior to deploying the server into the factory, these are
distributed separately in encrypted form. Contact Byton test engineering for
details.

NOTE: This process assumes that the factory does not use the 192.168.137.*
subnet, and it is therefore free to be used for communicating the test
stations. If that's not true (i.e. the factory DOES use 192.168.137.*) then an
alternative install procedure is required, including reconfiguration of test
station controllers. Contact Byton test engineering for details. 

