#!/usr/bin/python2

import traceback, re, cgi, sys, psycopg2, subprocess, os, base64

from util import escape, select, table, click, html, authenticate

authenticate("Supervisor", "supervisor:superx5")

try:

    # update the dnsmasq dhcp configuration with current contents of stations database
    def dnsmasq():
        p = subprocess.Popen(["sudo","/etc/factory/update.dnsmasq"], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        stdout = p.communicate()[0]
        p.stdout.close()
        status = p.returncode

        if not stdout:
            stdout="update.dnsmasq unknown failure"
        if status:
            raise Exception("%s (%d)" % (stdout.split("\n")[0], status))

    conn=psycopg2.connect('dbname=factory')
    cur=conn.cursor()
    form=cgi.FieldStorage()

    content=None

    if 'action' in form:
        action=[form.getvalue('action'), None]
        if '=' in action[0]: action = form.getvalue('action').split('=',1)
        if action[0] == 'none':
            pass
        elif action[0] == 'new':
            content = ("<form method=get>"+
                        table(("form",
                        [
                            [ "Station ID",  "<input name=station type=text>" ],
                            [ "Station MAC", "<input name=mac     type=text>" ],
                            [ "Fixture",     "<input name=fixture type=text>" ],
                            [ "Comment",     "<input name=comment type=text>" ]
                        ]))+
                        "<button name=action value='insert'>Save</button>" +
                        "<button name=action value=none>Cancel</button>" +
                        "</form>")
        elif action[0] == 'insert':
                cur.execute('insert into stations (station,mac,fixture,comment) values(%s,%s,%s,%s)',
                    (form.getvalue('station'),form.getvalue('mac'),form.getvalue('fixture'),form.getvalue('comment')))
                conn.commit()
                dnsmasq()
        elif action[0] == 'del':
            content = ("<form method=get>" +
                       "Really delete station %s?&nbsp;" % action[1] +
                       "<button name=action value='really=%s'>Yes</button>" % action[1] +
                       "<button name=action value=none>No</button>"+
                       "</form>" )
        elif action[0] == 'really':
                cur.execute('delete from stations where station=%s', (action[1],))
                conn.commit()
                dnsmasq() 
        elif action[0] == 'edit':
            cur.execute("select station, mac, fixture, comment from stations where station = %s", (action[1],))
            station, mac, fixture, comment = escape(cur.fetchone())
            content = ("<form method=get>" +
                        table(("form",
                        [
                            [ "Station ID",  "<input name=station type=text value='%s'>" % station ],
                            [ "Station MAC", "<input name=mac     type=text value='%s'>" % mac ],
                            [ "Fixture",     "<input name=fixture type=text value='%s'>" % fixture ],
                            [ "Comment",     "<input name=comment type=text value='%s'>" % comment ]
                        ])) +
                        "<button name=action value='update=%s'>Save</button>" % station +
                        "<button name=action value='none'>Cancel</button>" +
                        "</form>")
        elif action[0] == 'update':
            cur.execute('update stations set station=%s, mac=%s, fixture=%s, comment=%s where station=%s',
                (form.getvalue('station'),form.getvalue('mac'),form.getvalue('fixture'),form.getvalue('comment'),action[1]))
            conn.commit()
            dnsmasq()
        else:
            raise Exception('Invalid action = "%s %s' % tuple(action))

    if not content:
        cur.execute('select station,mac,fixture,comment from stations order by station')
        if not cur.rowcount:
            content = "No stations!"
        else:
            rows=cur.fetchall()
            content = (table(("data",
                              [ 
                                  ["Station","MAC","Fixture","Comment","&nbsp;"] 
                              ] +
                              [ ( escape(list(row)) + 
                                  [ ("<form method=get>" +
                                     "<button name=action value='edit=%s'>Edit</button>" % escape(row[0]) +
                                     "<button name=action value='del=%s'>Delete</button>" % escape(row[0]) +
                                     "</form>"
                                    )
                                  ]
                                ) for row in rows
                              ]
                             )) +
                       "<p><form method=get><button name=action value=new>New station</button></form>")

    # print generated content
    print html("Station Manager", 
               "table.data tr:nth-child(even) { background: #CCC; }", 
               content)

except:
    print "Content-type: text/plain; charset=utf-8\n\nAn error has occurred"
    print
    traceback.print_exc(file = sys.stdout)
    print
    for k in sorted(form.keys()): print k,"=",form.getvalue(k)
